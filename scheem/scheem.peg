start =
    expression

expression =
  	atom
    / atomList
    / quoteExpression

spacedExpression =
	whitespace* e:expression
    { return e; }

atomList =
	lparens a:spacedExpression* whitespace* rparens
    { return a; }

quoteExpression =
    q:quote e:expression
    { return ["quote", e]; }

validchar
    = [0-9a-zA-Z_?!+\-=@#$%^&*/.]

spacedAtoms =
	whitespace* a:atom { return a; }

atom =
    chars:validchar+
        { return chars.join(""); }

whitespace =
    space
    / tab
    / newline
    / space whitespace
    / tab whitespace
    / newline whitespace

lparens = "("
rparens = ")"
space = " "
tab = "\t"
newline = "\n"
quote = "'"


